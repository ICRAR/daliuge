#
# Travis CI configuration file
#
# ICRAR - International Centre for Radio Astronomy Research
# (c) UWA - The University of Western Australia, 2016
# Copyright by UWA (in the framework of the ICRAR)
# All rights reserved
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307  USA
#

# To use docker later...
sudo: required

# let's go!
language: python
matrix:
  include:
    # - python: "3.10"
    - python: "3.8"
      env: NO_DLG_RUNTIME=1
    - python: "3.8"
      env: NO_DLG_TRANSLATOR=1
    - python: "3.9"
    # NOTE: The OpenAPI code still needs to be removed
    # - python: "3.8"
    #   env: TEST_OPENAPI=1
    # NOTE: commenting 3.7 for now.
    # travis early build stage fails non-reproducible
    # - python: "3.7"
    - name: doxygen
      before_install:
      install:
        - sudo apt-get update && sudo apt-get install -y doxygen xsltproc
      before_script:
        - export PROJECT_NAME=daliuge
        - export PROJECT_VERSION=$(git rev-parse --short HEAD)
        - export GIT_REPO=$(git config --get remote.origin.url)
        - git config --global user.name $GITHUB_USERNAME
        - git config --global user.email "$GITHUB_USERNAME@gmail.com"
      script:
        - python3 tools/xml2palette/xml2palette.py -i ./ -t daliuge -o $PROJECT_NAME-$TRAVIS_BRANCH.palette
        - python3 tools/xml2palette/xml2palette.py -i ./ -t template -o $PROJECT_NAME-$TRAVIS_BRANCH-template.palette
      after_success:
        - git clone https://$GITHUB_TOKEN@github.com/ICRAR/EAGLE_test_repo
        - mkdir -p EAGLE_test_repo/$PROJECT_NAME
        - mv $PROJECT_NAME-$TRAVIS_BRANCH.palette EAGLE_test_repo/$PROJECT_NAME/
        - mv $PROJECT_NAME-$TRAVIS_BRANCH-template.palette EAGLE_test_repo/$PROJECT_NAME/
        - cd EAGLE_test_repo
        - git add *
        - git diff-index --quiet HEAD || git commit -m "Automatically generated DALiuGE palette (branch $TRAVIS_BRANCH, commit $PROJECT_VERSION)"
        - git push

    # Build documentation similarly to how RTD does
    - name: documentation
      python: "3.8"
      before_install:
      install:
        - pip install sphinx sphinx-rtd-theme gputil merklelib
      script:
        - READTHEDOCS=True make -C docs html SPHINXOPTS="-W --keep-going"


# We want to use docker during the tests
services:
 - docker

# Try to speed up builds by caching our dependencies
cache: pip

before_install:
 - pip install -U coveralls pytest pytest-cov
 - pip install -U setuptools pip wheel dask

install:
 - pip install -e daliuge-common/
 - test -n "$NO_DLG_TRANSLATOR" || pip install -e daliuge-translator/
 - test -n "$NO_DLG_RUNTIME" || pip install -e daliuge-engine/

# run the tests, making sure subprocesses generate coverage information
script:
 - COVFILES=
 - test -n "$NO_DLG_TRANSLATOR" || { (cd daliuge-translator && pip install -r test-requirements.txt && py.test --cov) && COVFILES+=" daliuge-translator/.coverage"; }
 - test -n "$NO_DLG_RUNTIME" || { (cd daliuge-engine && py.test --cov) && COVFILES+=" daliuge-engine/.coverage"; }
 - coverage combine $COVFILES
 - test -z "$TEST_OPENAPI" || (cd OpenAPI/tests && ./test_managers_openapi.sh)

# Publish to coveralls (only once per commit, so only using one environment)
after_success:
 - coveralls
