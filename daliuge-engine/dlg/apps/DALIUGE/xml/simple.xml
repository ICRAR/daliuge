<?xml version="1.0" standalone="yes"?>
<doxygen version="1.9.0" xml:lang="en-US"><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::AverageArraysApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ae58ff9997313accbdddb70c5e2e3d4c8" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.AverageArraysApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_random_array_app" kindref="compound">RandomArrayApp</ref>', 'Random Array App.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="237" column="1" bodyfile="simple.py" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a2b7d9a8be50acfe28cc0b8abe098e143" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list dlg.apps.simple.AverageArraysApp::methods</definition>
        <argsstring/>
        <name>methods</name>
        <initializer>=  ['mean', 'median']</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="243" column="1" bodyfile="simple.py" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a5cd39fb9ca51c0a4d4b7b555c09258c1" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.AverageArraysApp::method</definition>
        <argsstring/>
        <name>method</name>
        <initializer>=  dlg_string_param('method', methods[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="244" column="1" bodyfile="simple.py" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ad10cd5d6580744ad9e1901866c419c40" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list dlg.apps.simple.AverageArraysApp::marray</definition>
        <argsstring/>
        <name>marray</name>
        <initializer>=  []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="245" column="1" bodyfile="simple.py" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ab5b2429f5da91e32d9dd5e7b14abc6e3" prot="public" static="no" mutable="no">
        <type/>
        <definition>dlg.apps.simple.AverageArraysApp::marray</definition>
        <argsstring/>
        <name>marray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="274" column="1" bodyfile="simple.py" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a5b8f261f24f56d4d989ac5b0fa4adbd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.AverageArraysApp.initialize</definition>
        <argsstring>(self, **kwargs)</argsstring>
        <name>initialize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="247" column="1" bodyfile="simple.py" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a6b1d02edeb152ef36114e60fd514d510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.AverageArraysApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="250" column="1" bodyfile="simple.py" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ae0c6c4db425f36093fc053ed75a9db16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.AverageArraysApp.getInputArrays</definition>
        <argsstring>(self)</argsstring>
        <name>getInputArrays</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create the input array from all inputs received. Shape is
(&lt;#inputs&gt;, &lt;#elements&gt;), where #elements is the length of the
vector received from one input.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="262" column="1" bodyfile="simple.py" bodystart="262" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1aa5f829dadfeddea6d4f6a723466e2dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.AverageArraysApp.averageArray</definition>
        <argsstring>(self)</argsstring>
        <name>averageArray</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="277" column="1" bodyfile="simple.py" bodystart="277" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AverageArrays<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A testing APP that takes multiple numpy arrays on input and calculates the mean or the median, depending on the value provided in the method parameter. Users can add as many producers to the input array port as required and the resulting array will also be send to all connected output apps. <simplesect kind="par"><title>EAGLE_START</title><para/>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/method/mean/string/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>the methd used for averaging<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.AverageArraysApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port/array</parametername>
</parameternamelist>
<parameterdescription>
<para>Port for the input array(s). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port/array</parametername>
</parameternamelist>
<parameterdescription>
<para>Port carrying the averaged array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>EAGLE_END</title><para/>
</simplesect>
<verbatim>A BarrierAppDrop that averages arrays received on input. It requires
multiple inputs and writes the generated average vector to all of its
outputs.
The input arrays are assumed to have the same number of elements and
the output array will also have that same number of elements.

Keywords:

method:  string &lt;['mean']|'median'&gt;, use mean or median as method.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.AverageArraysApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.AverageArraysApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="224" column="1" bodyfile="simple.py" bodystart="224" bodyend="282"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1aa5f829dadfeddea6d4f6a723466e2dc2" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>averageArray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ae58ff9997313accbdddb70c5e2e3d4c8" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ae0c6c4db425f36093fc053ed75a9db16" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>getInputArrays</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a5b8f261f24f56d4d989ac5b0fa4adbd4" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>initialize</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ad10cd5d6580744ad9e1901866c419c40" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>marray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1ab5b2429f5da91e32d9dd5e7b14abc6e3" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>marray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a5cd39fb9ca51c0a4d4b7b555c09258c1" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>method</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a2b7d9a8be50acfe28cc0b8abe098e143" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>methods</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app_1a6b1d02edeb152ef36114e60fd514d510" prot="public" virt="non-virtual"><scope>dlg::apps::simple::AverageArraysApp</scope><name>run</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_copy_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::CopyApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
    <derivedcompoundref refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public" virt="non-virtual">dlg.apps.simple.SleepAndCopyApp</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1a9d755eb2214dac2c29bacb3946471d7b" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.CopyApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_copy_app" kindref="compound">CopyApp</ref>', 'Copy App.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="100" column="1" bodyfile="simple.py" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1ad16fe55a07097d0992c9ab4f522750b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <reimplementedby refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac">run</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="105" column="1" bodyfile="simple.py" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1ab6e819bb8b40bdbc99e394f330d6cd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.copyAll</definition>
        <argsstring>(self)</argsstring>
        <name>copyAll</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="108" column="1" bodyfile="simple.py" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1a43b5e8973927cd74a1f2121152141408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.copyRecursive</definition>
        <argsstring>(self, inputDrop)</argsstring>
        <name>copyRecursive</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>inputDrop</type>
          <defname>inputDrop</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="112" column="1" bodyfile="simple.py" bodystart="112" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CopyApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A simple APP that copies its inputs into its outputs. All inputs are copied into all outputs in the order they were declared in the graph. If an input is a container (e.g. a directory) it copies the content recursively. <simplesect kind="par"><title>EAGLE_START</title><para/>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.CopyApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<verbatim>A BarrierAppDrop that copies its inputs into its outputs.
All inputs are copied into all outputs in the order they were declared in
the graph.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="94" column="1" bodyfile="simple.py" bodystart="94" bodyend="121"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a9d755eb2214dac2c29bacb3946471d7b" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1ab6e819bb8b40bdbc99e394f330d6cd6a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>copyAll</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a43b5e8973927cd74a1f2121152141408" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>copyRecursive</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1ad16fe55a07097d0992c9ab4f522750b1" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>run</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_hello_world_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::HelloWorldApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1ae344c962f4f70c9c4f93d16e643cd506" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.HelloWorldApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app" kindref="compound">HelloWorldApp</ref>', 'Hello World App.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="307" column="1" bodyfile="simple.py" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1aa9a59fff0c1caee25b46d942138b8c86" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.HelloWorldApp::greet</definition>
        <argsstring/>
        <name>greet</name>
        <initializer>=  dlg_string_param('greet', 'World')</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="312" column="1" bodyfile="simple.py" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1a53f096cb2e9b003fe83f8f39e873746b" prot="public" static="no" mutable="no">
        <type/>
        <definition>dlg.apps.simple.HelloWorldApp::greeting</definition>
        <argsstring/>
        <name>greeting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="315" column="1" bodyfile="simple.py" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1a5e1a641e2310740099ce9e01a1e8695c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.HelloWorldApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="314" column="1" bodyfile="simple.py" bodystart="314" bodyend="324"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>HelloWorldApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A simple APP that implements the standard Hello World in DALiuGE. It allows to change 'World' with some other string and it also permits to connect the single output port to multiple sinks, which will all receive the same message. App does not require any input. <simplesect kind="par"><title>EAGLE_START</title><para/>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/greet/World/String/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>What appears after 'Hello '<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.HelloWorldApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port/hello</parametername>
</parameternamelist>
<parameterdescription>
<para>The port carrying the message produced by the app. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>EAGLE_END</title><para/>
</simplesect>
<verbatim>An App that writes 'Hello World!' or 'Hello &lt;greet&gt;!' to all of
its outputs.

Keywords:
greet:   string, [World], whom to greet.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.HelloWorldApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.HelloWorldApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="299" column="1" bodyfile="simple.py" bodystart="299" bodyend="324"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1ae344c962f4f70c9c4f93d16e643cd506" prot="public" virt="non-virtual"><scope>dlg::apps::simple::HelloWorldApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1aa9a59fff0c1caee25b46d942138b8c86" prot="public" virt="non-virtual"><scope>dlg::apps::simple::HelloWorldApp</scope><name>greet</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1a53f096cb2e9b003fe83f8f39e873746b" prot="public" virt="non-virtual"><scope>dlg::apps::simple::HelloWorldApp</scope><name>greeting</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app_1a5e1a641e2310740099ce9e01a1e8695c" prot="public" virt="non-virtual"><scope>dlg::apps::simple::HelloWorldApp</scope><name>run</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_null_barrier_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::NullBarrierApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_null_barrier_app_1a4d2c527e1fffdf515bbd3fced21ac190" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.NullBarrierApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app" kindref="compound">NullBarrierApp</ref>', 'Null Barrier.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="39" column="1" bodyfile="simple.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_null_barrier_app_1ae67eda225b1f3eae9c364cef074c917f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.NullBarrierApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="45" column="1" bodyfile="simple.py" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.NullBarrierApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.NullBarrierApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="38" column="1" bodyfile="simple.py" bodystart="38" bodyend="49"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app_1a4d2c527e1fffdf515bbd3fced21ac190" prot="public" virt="non-virtual"><scope>dlg::apps::simple::NullBarrierApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app_1ae67eda225b1f3eae9c364cef074c917f" prot="public" virt="non-virtual"><scope>dlg::apps::simple::NullBarrierApp</scope><name>run</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_random_array_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::RandomArrayApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a77c6140b456b6a845012fe145bcbd909" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_random_array_app" kindref="compound">RandomArrayApp</ref>', 'Random Array App.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="165" column="1" bodyfile="simple.py" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ac6da70efab97d63ee8e8baa703cafa2f" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::integer</definition>
        <argsstring/>
        <name>integer</name>
        <initializer>=  dlg_bool_param('integer', True)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="171" column="1" bodyfile="simple.py" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a916ffd8cca411fb7b6c922553be0f02c" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::low</definition>
        <argsstring/>
        <name>low</name>
        <initializer>=  dlg_float_param('low', 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="172" column="1" bodyfile="simple.py" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a2c859df2fda06bf576e303518bb5f92a" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::high</definition>
        <argsstring/>
        <name>high</name>
        <initializer>=  dlg_float_param('high', 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="173" column="1" bodyfile="simple.py" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1af0e59d164b4e40b91fadec74ccedd9d0" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::size</definition>
        <argsstring/>
        <name>size</name>
        <initializer>=  dlg_int_param('size', 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="174" column="1" bodyfile="simple.py" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a5bb05459f2650f5ffb9226747647a421" prot="public" static="yes" mutable="no">
        <type>list</type>
        <definition>list dlg.apps.simple.RandomArrayApp::marray</definition>
        <argsstring/>
        <name>marray</name>
        <initializer>=  []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="175" column="1" bodyfile="simple.py" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1aab361830b9d1d62a0b57d00047dd713b" prot="public" static="no" mutable="no">
        <type/>
        <definition>dlg.apps.simple.RandomArrayApp::marray</definition>
        <argsstring/>
        <name>marray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="199" column="1" bodyfile="simple.py" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a7af33812aa34879859acfcbc903aaab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.RandomArrayApp.initialize</definition>
        <argsstring>(self, **kwargs)</argsstring>
        <name>initialize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="177" column="1" bodyfile="simple.py" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1abd114510ece90c24417811df5b58421e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.RandomArrayApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="180" column="1" bodyfile="simple.py" bodystart="180" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ab235a46cb3f6b14b410d16250320e941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.RandomArrayApp.generateRandomArray</definition>
        <argsstring>(self)</argsstring>
        <name>generateRandomArray</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="190" column="1" bodyfile="simple.py" bodystart="190" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ab6bbe567136a59eedfc3589eb14e9745" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.RandomArrayApp._getArray</definition>
        <argsstring>(self)</argsstring>
        <name>_getArray</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="201" column="1" bodyfile="simple.py" bodystart="201" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RandomArrayApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A testing APP that does not take any input and produces a random array of type int64, if integer is set to True, else of type float64. size indicates the number of elements ranging between the values low and high. The resulting array will be send to all connected output apps. <simplesect kind="par"><title>EAGLE_START</title><para/>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/size/100/Integer/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>the siz of the array<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/integer/True/Boolean/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>Generate integer array?<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/low/0/float/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>low value of range in array [inclusive]<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/high/1/float/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>high value of range of array [exclusive]<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.RandomArrayApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port/array</parametername>
</parameternamelist>
<parameterdescription>
<para>Port carrying the averaged array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>EAGLE_END</title><para/>
</simplesect>
<verbatim>A BarrierAppDrop that generates an array of random numbers. It does
not require any inputs and writes the generated array to all of its
outputs.

Keywords:

integer:  bool [True], generate integer array
low:      float, lower boundary (will be converted to int for integer arrays)
high:     float, upper boundary (will be converted to int for integer arrays)
size:     int, number of array elements
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.RandomArrayApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_random_array_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.RandomArrayApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_random_array_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="152" column="1" bodyfile="simple.py" bodystart="152" bodyend="205"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ab6bbe567136a59eedfc3589eb14e9745" prot="private" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>_getArray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a77c6140b456b6a845012fe145bcbd909" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ab235a46cb3f6b14b410d16250320e941" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>generateRandomArray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a2c859df2fda06bf576e303518bb5f92a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>high</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a7af33812aa34879859acfcbc903aaab4" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>initialize</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1ac6da70efab97d63ee8e8baa703cafa2f" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>integer</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a916ffd8cca411fb7b6c922553be0f02c" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>low</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1a5bb05459f2650f5ffb9226747647a421" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>marray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1aab361830b9d1d62a0b57d00047dd713b" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>marray</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1abd114510ece90c24417811df5b58421e" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>run</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_random_array_app_1af0e59d164b4e40b91fadec74ccedd9d0" prot="public" virt="non-virtual"><scope>dlg::apps::simple::RandomArrayApp</scope><name>size</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::SleepAndCopyApp</compoundname>
    <basecompoundref refid="classdlg_1_1apps_1_1simple_1_1_sleep_app" prot="public" virt="non-virtual">dlg.apps.simple.SleepApp</basecompoundref>
    <basecompoundref refid="classdlg_1_1apps_1_1simple_1_1_copy_app" prot="public" virt="non-virtual">dlg.apps.simple.CopyApp</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.SleepAndCopyApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <reimplements refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a435b7385c062001e2f74a850ec406ecb">run</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="124" column="1" bodyfile="simple.py" bodystart="124" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>A combination of the SleepApp and the CopyApp. It sleeps, then copies</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="121" column="1" bodyfile="simple.py" bodystart="121" bodyend="129"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4353d9b64dfee92dae8ba005505da596" prot="public" virt="non-virtual" ambiguityscope="dlg::apps::simple::SleepApp."><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a9d755eb2214dac2c29bacb3946471d7b" prot="public" virt="non-virtual" ambiguityscope="dlg::apps::simple::CopyApp."><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1ab6e819bb8b40bdbc99e394f330d6cd6a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>copyAll</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a43b5e8973927cd74a1f2121152141408" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>copyRecursive</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4caa2a071f26e008d51b9e36e566a5bb" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>initialize</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>run</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a410e731dcf165e9c205354b1c4b94b5a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepAndCopyApp</scope><name>sleepTime</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classdlg_1_1apps_1_1simple_1_1_sleep_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::SleepApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
    <derivedcompoundref refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public" virt="non-virtual">dlg.apps.simple.SleepAndCopyApp</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4353d9b64dfee92dae8ba005505da596" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.SleepApp::compontent_meta</definition>
        <argsstring/>
        <name>compontent_meta</name>
        <initializer>=  dlg_component('<ref refid="classdlg_1_1apps_1_1simple_1_1_sleep_app" kindref="compound">SleepApp</ref>', 'Sleep App.',
                                    [dlg_batch_input('binary/*', [])],
                                    [dlg_batch_output('binary/*', [])],
                                    [dlg_streaming_input('binary/*')])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="66" column="1" bodyfile="simple.py" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a410e731dcf165e9c205354b1c4b94b5a" prot="public" static="yes" mutable="no">
        <type/>
        <definition>dlg.apps.simple.SleepApp::sleepTime</definition>
        <argsstring/>
        <name>sleepTime</name>
        <initializer>=  dlg_float_param('sleep time', 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="71" column="1" bodyfile="simple.py" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4caa2a071f26e008d51b9e36e566a5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.SleepApp.initialize</definition>
        <argsstring>(self, **kwargs)</argsstring>
        <name>initialize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="73" column="1" bodyfile="simple.py" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a435b7385c062001e2f74a850ec406ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.SleepApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <reimplementedby refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac">run</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="76" column="1" bodyfile="simple.py" bodystart="76" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SleepApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A simple APP that sleeps the specified amount of time (0 by default). This is mainly useful (and used) to test graph translation and structure without executing real algorithms. Very useful for debugging. <simplesect kind="par"><title>EAGLE_START</title><para/>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para/>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/sleepTime/5/Integer/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of seconds to sleep<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.SleepApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<verbatim>A BarrierAppDrop that sleeps the specified amount of time (0 by default)</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="64" column="1" bodyfile="simple.py" bodystart="64" bodyend="80"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4353d9b64dfee92dae8ba005505da596" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4caa2a071f26e008d51b9e36e566a5bb" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>initialize</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a435b7385c062001e2f74a850ec406ecb" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>run</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a410e731dcf165e9c205354b1c4b94b5a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>sleepTime</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacedlg" kind="namespace" language="Python">
    <compoundname>dlg</compoundname>
    <innernamespace refid="namespacedlg_1_1apps">dlg::apps</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacedlg_1_1apps" kind="namespace" language="Python">
    <compoundname>dlg::apps</compoundname>
    <innernamespace refid="namespacedlg_1_1apps_1_1simple">dlg::apps::simple</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacedlg_1_1apps_1_1simple" kind="namespace" language="Python">
    <compoundname>dlg::apps::simple</compoundname>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app" prot="public">dlg::apps::simple::NullBarrierApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_sleep_app" prot="public">dlg::apps::simple::SleepApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_copy_app" prot="public">dlg::apps::simple::CopyApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public">dlg::apps::simple::SleepAndCopyApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_random_array_app" prot="public">dlg::apps::simple::RandomArrayApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app" prot="public">dlg::apps::simple::AverageArraysApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app" prot="public">dlg::apps::simple::HelloWorldApp</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="simple.py" line="1" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="simple_8py" kind="file" language="Python">
    <compoundname>simple.py</compoundname>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_null_barrier_app" prot="public">dlg::apps::simple::NullBarrierApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_sleep_app" prot="public">dlg::apps::simple::SleepApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_copy_app" prot="public">dlg::apps::simple::CopyApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public">dlg::apps::simple::SleepAndCopyApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_random_array_app" prot="public">dlg::apps::simple::RandomArrayApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_average_arrays_app" prot="public">dlg::apps::simple::AverageArraysApp</innerclass>
    <innerclass refid="classdlg_1_1apps_1_1simple_1_1_hello_world_app" prot="public">dlg::apps::simple::HelloWorldApp</innerclass>
    <innernamespace refid="namespacedlg_1_1apps_1_1simple">dlg::apps::simple</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="simple.py"/>
  </compounddef></doxygen>