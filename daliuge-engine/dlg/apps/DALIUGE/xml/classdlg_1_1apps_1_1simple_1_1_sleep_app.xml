<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.0" xml:lang="en-US">
  <compounddef id="classdlg_1_1apps_1_1simple_1_1_sleep_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::SleepApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
    <derivedcompoundref refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public" virt="non-virtual">dlg.apps.simple.SleepAndCopyApp</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4353d9b64dfee92dae8ba005505da596" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dlg.apps.simple.SleepApp::compontent_meta</definition>
        <argsstring></argsstring>
        <name>compontent_meta</name>
        <initializer>=  dlg_component(&apos;<ref refid="classdlg_1_1apps_1_1simple_1_1_sleep_app" kindref="compound">SleepApp</ref>&apos;, &apos;Sleep App.&apos;,
                                    [dlg_batch_input(&apos;binary/*&apos;, [])],
                                    [dlg_batch_output(&apos;binary/*&apos;, [])],
                                    [dlg_streaming_input(&apos;binary/*&apos;)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="66" column="1" bodyfile="simple.py" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a410e731dcf165e9c205354b1c4b94b5a" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dlg.apps.simple.SleepApp::sleepTime</definition>
        <argsstring></argsstring>
        <name>sleepTime</name>
        <initializer>=  dlg_float_param(&apos;sleep time&apos;, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="71" column="1" bodyfile="simple.py" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4caa2a071f26e008d51b9e36e566a5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.SleepApp.initialize</definition>
        <argsstring>(self, **kwargs)</argsstring>
        <name>initialize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="73" column="1" bodyfile="simple.py" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a435b7385c062001e2f74a850ec406ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.SleepApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <reimplementedby refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac">run</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="76" column="1" bodyfile="simple.py" bodystart="76" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SleepApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A simple APP that sleeps the specified amount of time (0 by default). This is mainly useful (and used) to test graph translation and structure without executing real algorithms. Very useful for debugging. <simplesect kind="par"><title>EAGLE_START</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/sleepTime/5/Integer/readwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of seconds to sleep<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.SleepApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<verbatim>A BarrierAppDrop that sleeps the specified amount of time (0 by default)</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.SleepApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="64" column="1" bodyfile="simple.py" bodystart="64" bodyend="80"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4353d9b64dfee92dae8ba005505da596" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a4caa2a071f26e008d51b9e36e566a5bb" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>initialize</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a435b7385c062001e2f74a850ec406ecb" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>run</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_sleep_app_1a410e731dcf165e9c205354b1c4b94b5a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::SleepApp</scope><name>sleepTime</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
