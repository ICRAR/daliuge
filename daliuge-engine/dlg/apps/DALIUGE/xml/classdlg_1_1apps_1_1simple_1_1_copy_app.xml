<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.0" xml:lang="en-US">
  <compounddef id="classdlg_1_1apps_1_1simple_1_1_copy_app" kind="class" language="Python" prot="public">
    <compoundname>dlg::apps::simple::CopyApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BarrierAppDROP</basecompoundref>
    <derivedcompoundref refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app" prot="public" virt="non-virtual">dlg.apps.simple.SleepAndCopyApp</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1a9d755eb2214dac2c29bacb3946471d7b" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>dlg.apps.simple.CopyApp::compontent_meta</definition>
        <argsstring></argsstring>
        <name>compontent_meta</name>
        <initializer>=  dlg_component(&apos;<ref refid="classdlg_1_1apps_1_1simple_1_1_copy_app" kindref="compound">CopyApp</ref>&apos;, &apos;Copy App.&apos;,
                                    [dlg_batch_input(&apos;binary/*&apos;, [])],
                                    [dlg_batch_output(&apos;binary/*&apos;, [])],
                                    [dlg_streaming_input(&apos;binary/*&apos;)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="100" column="1" bodyfile="simple.py" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1ad16fe55a07097d0992c9ab4f522750b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.run</definition>
        <argsstring>(self)</argsstring>
        <name>run</name>
        <reimplementedby refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app_1ada7d6b73bf63ce6eaf6fe23de640d8ac">run</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="105" column="1" bodyfile="simple.py" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1ab6e819bb8b40bdbc99e394f330d6cd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.copyAll</definition>
        <argsstring>(self)</argsstring>
        <name>copyAll</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="108" column="1" bodyfile="simple.py" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classdlg_1_1apps_1_1simple_1_1_copy_app_1a43b5e8973927cd74a1f2121152141408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def dlg.apps.simple.CopyApp.copyRecursive</definition>
        <argsstring>(self, inputDrop)</argsstring>
        <name>copyRecursive</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>inputDrop</type>
          <defname>inputDrop</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.py" line="112" column="1" bodyfile="simple.py" bodystart="112" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CopyApp<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>A simple APP that copies its inputs into its outputs. All inputs are copied into all outputs in the order they were declared in the graph. If an input is a container (e.g. a directory) it copies the content recursively. <simplesect kind="par"><title>EAGLE_START</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gitrepo</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>category</parametername>
</parameternamelist>
<parameterdescription>
<para>PythonApp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param/appclass/dlg.apps.simple.CopyApp/String/readonly</parametername>
</parameternamelist>
<parameterdescription>
<para>Application class<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<verbatim>A BarrierAppDrop that copies its inputs into its outputs.
All inputs are copied into all outputs in the order they were declared in
the graph.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dlg.apps.simple.SleepAndCopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_sleep_and_copy_app"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dlg.apps.simple.CopyApp</label>
        <link refid="classdlg_1_1apps_1_1simple_1_1_copy_app"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BarrierAppDROP</label>
      </node>
    </collaborationgraph>
    <location file="simple.py" line="94" column="1" bodyfile="simple.py" bodystart="94" bodyend="121"/>
    <listofallmembers>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a9d755eb2214dac2c29bacb3946471d7b" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>compontent_meta</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1ab6e819bb8b40bdbc99e394f330d6cd6a" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>copyAll</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1a43b5e8973927cd74a1f2121152141408" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>copyRecursive</name></member>
      <member refid="classdlg_1_1apps_1_1simple_1_1_copy_app_1ad16fe55a07097d0992c9ab4f522750b1" prot="public" virt="non-virtual"><scope>dlg::apps::simple::CopyApp</scope><name>run</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
