name: Run unit tests

on:
  push:
    branches:
      - master  #  Only run on pushes to master
  pull_request:
    types: [opened, synchronize, reopened]  # Run on PRs from any branch to any target

jobs:
#  run_translator:
#    name: Run daliuge-translator tests with python ${{matrix.python-version}}
#    runs-on: ubuntu-22.04
#    strategy:
#      matrix:
#        include:
#          - python-version: "3.9"
#          - python-version: "3.10"
#          - python-version:  "3.11"
#          - python-version:  "3.12"
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/setup-python@v5
#        name: Install Python
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install test dependencies
#        run: |
#          pip install -U coveralls pytest pytest-cov
#          pip install -U setuptools pip wheel dask
#
#      - name: Install daliuge-common
#        run: pip install -e daliuge-common/
#
#      - name: Install daliuge-translator
#        run: pip install -e "daliuge-translator/[test]"
#
#      - name: Run daliuge-engine tests
#        run: |
#          export COVERAGE_FILE=daliuge-translator/.coverage.${{ matrix.subset }}.${{ github.job }}
#          cd daliuge-translator
#          py.test --cov --show-capture=no
#
#      - name: Run upload coverage artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: coverage-${{ github.job }}.${{ matrix.python-version }}
#          path: daliuge-translator/.coverage.${{ matrix.python-version }}.${{ github.job }}
#
#  run_engine:
#    name: Run daliuge-enginge tests with python ${{matrix.python-version}}
#    runs-on: ubuntu-22.04
#    strategy:
#      matrix:
#        include:
#          - python-version: "3.9"
#          - python-version: "3.10"
#          - python-version:  "3.11"
#          - python-version:  "3.12"
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/setup-python@v5
#        name: Install Python
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install test dependencies
#        run: |
#          pip install -U coveralls pytest pytest-cov
#          pip install -U setuptools pip wheel dask
#
#      - name: Install daliuge-common
#        run: pip install -e daliuge-common/
#
#      - name: Install daliuge-engine
#        run: pip install -e "daliuge-engine/[test]"
#
#      - name: Run tests with coverage
#        run: |
#          export COVERAGE_FILE=daliuge-engine/.coverage.${{ matrix.python-version }}.${{ github.job }}
#          cd daliuge-engine
#          py.test --cov --show-capture=no
#
#      - name: Run upload coverage artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: coverage-${{ github.job }}.${{ matrix.python-version }}
#          path: daliuge-engine/.coverage.${{ matrix.python-version }}.${{ github.job }}

  run_end_to_end:
    name: Run end-to-end tests with python ${{matrix.python-version}}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version:  "3.11"
          - python-version:  "3.12"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          pip install -U coveralls pytest pytest-cov
          pip install -U setuptools pip wheel dask

      - name: Install daliuge-common
        run: pip install -e daliuge-common/

      - name: Install daliuge-translator
        run: pip install -e "daliuge-translator/[test]"

      - name: Install daliuge-engine
        run: pip install -e "daliuge-engine/[test]"

      - run: |
          export COVERAGE_FILE=coverage.${{ matrix.python-version }}.${{ github.job }}
          py.test daliuge-engine/test/deploy/test_graph_to_manager.py 
          echo "covfiles=$COVERAGE_FILE" >> $GITHUB_ENV
          echo $COVERAGE_FILE
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          include-hidden-files: true
          name: coverage-${{ github.job }}.${{ matrix.python-version }}
          path: ${{ env.covfiles }}

  finish:
    needs: [run_end_to_end] # [run_translator, run_engine, run_end_to_end]
    runs-on: ubuntu-22.04
    steps:
    - name: Download all coverage artifacts
      uses: actions/download-artifact@v4
      with:
        path: coverage-artifacts

    - name: Install coverage tools
      run: pip install coverage coveralls

    - name: Combine coverage data
      run: |
        find . -name "coverage.*" -exec mv {} . \;
        coverage combine coverage-artifacts
        coverage report
        coverage xml

    - name: Upload to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_PARALLEL: true
      run: coveralls --service=github