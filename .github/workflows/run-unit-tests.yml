name: Run unit tests

on:
  push:
    branches:
      - master  #  Only run on pushes to master
  pull_request:
    types: [opened, synchronize, reopened]  # Run on PRs from any branch to any target

jobs:
  run_translator:
    name: Run daliuge-translator tests with python ${{matrix.python-version}}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version:  "3.11"
          - python-version:  "3.12"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          pip install -U coveralls pytest pytest-cov
          pip install -U setuptools pip wheel dask

      - name: Install daliuge-common
        run: pip install -e daliuge-common/

      - name: Run daliuge-translator tests
        if: ${{ matrix.translator == 'yes' }}
        run: |
            COVFILES=" daliuge-translator/.coverage"
            echo "COVFILES=$COVFILES" >> $GITHUB_ENV
            cd daliuge-translator
            py.test --cov --show-capture=no

  run_engine:
    name: Run daliuge-enginge tests with python ${{matrix.python-version}}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version:  "3.11"
          - python-version:  "3.12"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          pip install -U coveralls pytest pytest-cov
          pip install -U setuptools pip wheel dask

      - name: Install daliuge-common
        run: pip install -e daliuge-common/

      - name: Install daliuge-engine
        run: pip install -e "daliuge-engine/[test]"


      - name: Run daliuge-engine tests
        run: |
          COVFILES="$COVFILES daliuge-engine/.coverage"
          echo "COVFILES=$COVFILES" >> $GITHUB_ENV
          cd daliuge-engine
          py.test --cov --show-capture=no

  run_end_to_end:
    name: Run end-to-end tests with python ${{matrix.python-version}}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - python-version: "3.9"
          - python-version: "3.10"
          - python-version:  "3.11"
          - python-version:  "3.12"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          pip install -U coveralls pytest pytest-cov
          pip install -U setuptools pip wheel dask

      - name: Install daliuge-common
        run: pip install -e daliuge-common/

      - name: Install daliuge-translator
        run: pip install -e "daliuge-translator/[test]"

      - name: Install daliuge-engine
        run: pip install -e "daliuge-engine/[test]"

      - name: Run end-to-end tests
        if: ${{ matrix.engine == 'yes' }}
        run: |
          COVFILES="$COVFILES daliuge-engine/.coverage"
          echo "COVFILES=$COVFILES" >> $GITHUB_ENV
          cd daliuge-engine
          py.test test/deploy/test_graph_to_manager.py test/deploy/test_slurm_utils.py test/test_tool.py test/test_named_port_apps.py --cov --show-capture=no

      - name: Combine coverage
        run: coverage combine $COVFILES

      - name: Update to coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test_number }}
          COVERALLS_PARALLEL: true
        run: coveralls --service=github

  finish:
    needs: run_tests
    runs-on: ubuntu-22.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
